# Parser Configuration for Chat Conversion Framework
# Defines detection patterns, routing rules, and default values

# Export tool detection patterns
export_tools:
  claude-savemychatbot:
    patterns:
      json:
        - path: "metadata.export_date"
        - path: "metadata.export_time"
      markdown:
        - regex: "SaveMyChatbot"
        - regex: "export date:"
        - regex: "## User"
        - regex: "## Assistant"
    
  chatgpt-exporter:
    patterns:
      json:
        - path: "powered_by"
          contains: "ChatGPT Exporter"
        - path: "messages[0].say"  # Uses 'say' instead of 'content'
        - path: "messages[0].role"
          value: "Prompt"
      markdown:
        - regex: "## Prompt:"
        - regex: "## Response:"
        - regex: "Created:.*Exported:"
    
  native-chatgpt:
    patterns:
      json:
        - path: "chat_sessions"
        - path: "format_version"
        - path: "conversation_id"
    
  claude-exporter:
    patterns:
      json:
        - path: "title"
          exists: true
        - path: "messages"
          exists: true
        - not_path: "chat_sessions"  # Distinguish from ChatGPT
        - not_path: "powered_by"     # Distinguish from ChatGPT Exporter
      yaml:
        - path: "metadata"
        - path: "messages"
      html:
        - regex: "Claude Chat"
        - regex: "class=\"chat-message\""
      markdown:
        - regex: "\\*\\*User:\\*\\*"
        - regex: "\\*\\*Claude:\\*\\*"

# Role mapping rules
role_mappings:
  # ChatGPT Exporter specific
  "Prompt": "user"
  "Response": "assistant"
  # Legacy or alternative names
  "Human": "user"
  "human": "user"
  "User": "user"
  "You": "user"
  "Assistant": "assistant"
  "AI": "assistant"
  "Claude": "assistant"
  "ChatGPT": "assistant"
  "GPT": "assistant"
  "System": "system"
  "Tool": "tool"
  "Function": "tool"

# Platform inference rules
platform_inference:
  # Based on content patterns
  patterns:
    - match: "Claude"
      platform: "claude-desktop"
    - match: "Anthropic"
      platform: "claude-desktop"
    - match: "ChatGPT"
      platform: "chatgpt"
    - match: "OpenAI"
      platform: "chatgpt"
    - match: "GPT-4"
      platform: "chatgpt"
    - match: "GPT-3.5"
      platform: "chatgpt"
    - match: "Gemini"
      platform: "gemini"
    - match: "Bard"
      platform: "gemini"
  
  # Based on export tool
  tool_defaults:
    claude-savemychatbot: "claude-web"
    claude-exporter: "claude-desktop"
    chatgpt-exporter: "chatgpt"
    native-chatgpt: "chatgpt"
    gemini-exporter: "gemini"

# Default values for missing fields
defaults:
  metadata:
    platform: "unknown"
    exporter: "unknown"
    title: "Untitled Conversation"
    tags: []
    session_info: null
  
  message:
    role: "user"
    content: ""
    attachments: []
    metadata: {}

# Timestamp format hints for parsing
timestamp_formats:
  savemychatbot: "%B %d, %Y at %I:%M %p"  # "October 18, 2024 at 10:38 PM"
  chatgpt_exporter: "%Y-%m-%dT%H:%M:%S"   # ISO-like format
  native: null  # Usually Unix timestamp

# Parser routing rules
parser_routes:
  - format: "json"
    source: "native-chatgpt"
    parser: "native-chatgpt-json"
  
  - format: "json"
    source: "chatgpt-exporter"
    parser: "chatgpt-exporter-json"
  
  - format: "json" 
    source: "claude-savemychatbot"
    parser: "savemychatbot-json"
  
  - format: "json"
    source: "claude-exporter"
    parser: "generic-json"
  
  - format: "markdown"
    source: "chatgpt-exporter-md"
    parser: "chatgpt-exporter-markdown"
  
  - format: "markdown"
    source: "claude-savemychatbot"
    parser: "savemychatbot-markdown"
  
  - format: "markdown"
    source: "claude-exporter-md"
    parser: "generic-markdown"
  
  - format: "yaml"
    source: "claude-exporter-yaml"
    parser: "generic-yaml"
  
  - format: "html"
    source: "claude-exporter-html"
    parser: "claude-html"
  
  - format: "html"
    source: "chatgpt-exporter-html"
    parser: "generic-html"

# Field extraction patterns
field_mappings:
  # How to extract common fields from various formats
  chat_id:
    - path: "id"
    - path: "conversation_id"
    - path: "metadata.chat_id"
    - generate: true  # If not found, generate one
  
  title:
    - path: "title"
    - path: "metadata.title"
    - path: "name"
    - regex: "^# (.+)$"  # From markdown header
    - default: "Untitled Conversation"
  
  created_at:
    - path: "created_at"
    - path: "metadata.created_at"
    - path: "dates.created"
    - path: "create_time"
    - path: "messages[0].timestamp"  # First message
    - default: "current_time"
  
  updated_at:
    - path: "updated_at"
    - path: "metadata.updated_at"
    - path: "dates.updated"
    - path: "update_time"
    - path: "messages[-1].timestamp"  # Last message
    - default: "current_time"
  
  exported_at:
    - path: "exported_at"
    - path: "metadata.exported_at"
    - path: "dates.exported"
    - path: "export_time"
    - combine:
        - path: "metadata.export_date"
        - path: "metadata.export_time"
    - default: "file_modified_time"

# Message content extraction
message_extraction:
  content_fields:
    - "content"
    - "say"  # ChatGPT Exporter
    - "text"
    - "message"
  
  role_fields:
    - "role"
    - "author"
    - "sender"
    - "from"
  
  timestamp_fields:
    - "timestamp"
    - "ts"
    - "ts_utc"
    - "created_at"
    - "time"
    - "date"

# Error handling configuration
error_handling:
  # What to do when fields are missing
  missing_required_fields:
    action: "use_defaults"  # or "fail"
    log_level: "warning"
  
  # What to do with malformed data
  malformed_data:
    action: "attempt_recovery"  # or "fail"
    log_level: "error"
  
  # What to do with unknown formats
  unknown_format:
    action: "attempt_generic_parser"  # or "fail"
    log_level: "warning"

# Validation settings
validation:
  # Whether to validate after conversion
  enabled: true
  
  # What to do on validation failure
  on_failure: "warn"  # or "fail"
  
  # Fields that can be auto-fixed
  auto_fix:
    - "schema_version"
    - "message_id"
    - "chat_id"
    - "timestamps"